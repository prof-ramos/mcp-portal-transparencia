# Smithery Deployments - Regras de Configura√ß√£o

## üéØ Configura√ß√£o Recomendada

### TypeScript Deploy (Recomendado)

Para projetos TypeScript, use sempre o runtime TypeScript do Smithery:

```yaml
# smithery.yaml
runtime: 'typescript'
name: 'portal-transparencia-brasil'
description: 'MCP Server for Portal da Transpar√™ncia API'

env:
  PORTAL_API_KEY:
    description: 'API key for Portal da Transpar√™ncia'
    required: true
  LOG_LEVEL:
    description: 'Log level (error, warn, info, debug)'
    required: false
    default: 'info'

health:
  mcp:
    timeoutMs: 15000
```

### Custom Deploy (Docker)

Use apenas quando necess√°rio para linguagens n√£o-TypeScript:

```yaml
# smithery.yaml
runtime: 'container'
name: 'portal-transparencia-brasil'

build:
  dockerfile: './Dockerfile'
  context: '.'

startCommand:
  type: 'http'
  configSchema:
    type: 'object'
    properties:
      apiKey:
        type: 'string'
        description: 'Your API key'
    required: ['apiKey']
  exampleConfig:
    apiKey: 'sk-example123'
```

## üö´ Anti-padr√µes

### ‚ùå N√£o use configura√ß√£o duplicada

```yaml
# ‚ùå EVITAR: smithery.yaml + smithery.json
# Use apenas smithery.yaml para TypeScript Deploy
```

### ‚ùå N√£o use Dockerfile desnecessariamente

```dockerfile
# ‚ùå EVITAR: Dockerfile para TypeScript Deploy
# Use apenas para Custom Deploy
```

## üîß Implementa√ß√£o de Lazy Loading

### ‚úÖ Implementar descoberta de ferramentas

```typescript
// src/mcp-server.ts
export const tools = {
  listTools: {
    description: 'List available tools without authentication',
    inputSchema: {
      type: 'object',
      properties: {},
      required: [],
    },
    handler: async () => {
      return {
        tools: [
          {
            name: 'consultar_servidores',
            description: 'Consultar servidores do Poder Executivo Federal',
          },
          // ... outras ferramentas
        ],
      };
    },
  },
};
```

## üìã Checklist de Deploy

### Pr√©-requisitos TypeScript Deploy

- [ ] `package.json` com `"type": "commonjs"`
- [ ] `tsconfig.json` configurado corretamente
- [ ] Build local funcionando: `npm run build`
- [ ] `smithery.yaml` com `runtime: "typescript"`

### Pr√©-requisitos Custom Deploy

- [ ] `Dockerfile` implementando Streamable HTTP
- [ ] Servidor escutando na vari√°vel `PORT`
- [ ] Endpoint `/mcp` dispon√≠vel
- [ ] `smithery.yaml` com `runtime: "container"`

## üîç Valida√ß√£o

### Health Check

```typescript
// Para TypeScript Deploy
health:
  mcp:
    timeoutMs: 15000

// Para Custom Deploy
health:
  http:
    path: /health
    port: 3000
    interval: 10s
    timeout: 5s
    gracePeriod: 20s
```

### Configura√ß√£o de Ambiente

```yaml
# Sempre usar dot-notation para configura√ß√£o
# GET/POST /mcp?server.host=localhost&server.port=8080&apiKey=secret123
```

## üìö Refer√™ncias

- [Smithery Deployments Documentation](https://smithery.ai/docs/build/deployments)
- [Streamable HTTP Specification](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#streamable-http)
- [Session Configuration](https://smithery.ai/docs/build/session-config)
description:
globs:
alwaysApply: false

---
